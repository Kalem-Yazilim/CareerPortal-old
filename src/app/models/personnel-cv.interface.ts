import { BloodType } from '../enums/blood-type';
import { Gender } from '../enums/gender';
import { IdentificationDocumentType } from '../enums/identification-document-type';
import { MaritalStatus } from '../enums/marital-status';
import { MilitaryServiceState } from '../enums/military-service-state';
import { PersonnelRemark } from '../enums/personnel-remark';
import { CityDefinition } from './city-definition.interface';
import { CountryDefinition } from './country-definition.interface';
import { DistrictDefinition } from './district-definition.interface';
import { FileSystemStoreObjectBase } from './file-system-store-object-base.interface';
import { PersonnelCvEducation } from './personnel-cv-education.interface';
import { PersonnelCvJobQuality } from './personnel-cv-job-qualitys.interface';
import { PersonnelCvLanguage } from './personnel-cv-language.interface';
import { PersonnelCvLastJobReference } from './personnel-cv-last-job-reference.interface';
import { PersonnelCvLastJob } from './personnel-cv-last-job.interface';
import { PersonnelCvSendMail } from './personnel-cv-send-mail.interface';
import { PersonnelCVFile } from './personnel-cvfile.interface';
import { PersonnelDecision } from './personnel-decision.interface';
import { PersonnelDrivingLicence } from './personnel-driving-licence.interface';
import { PersonnelEducation } from './personnel-education.interface';
import { PersonnelJobBranch } from './personnel-job-branch.interface';
import { PersonnelJobCallStatus } from './personnel-job-call-status.interface';
import { PersonnelJob } from './personnel-job.interface';
import { PersonnelNationality } from './personnel-nationality.interface';
import { StateDefinition } from './state-definition.interface';
import { Base } from './_base.interface';

export interface PersonnelCv extends Base {
  NameOfPersonnelCV: string;
  Surname: string;
  Email: string;
  Smoking: boolean;
  InterZoneTrip: boolean;
  MemberComminuties: string;
  Interests: string;
  BirthDate: Date | string;
  CareerObjective: string;
  InterestPosition: string;
  MarriedDate: Date | string;
  HomeAdress: string;
  OfficePhone: string;
  HomePhone: string;
  MobilPhone: string;
  IdentificationNumber: string;
  MilitaryServiceDesc: string;
  MilitaryDate: Date | string;
  MilitaryManifestationDate: Date | string;
  DrivingLicence: boolean;
  CriminalRecord: boolean;
  CriminalRecordDesc: string;
  SalaryExpectation: number;
  SetWorkDate: Date | string;
  DependentDesc: string;
  TobaccoProdUseDesc: string;
  TravelState: boolean;
  TravelRestrictionDesc: string;
  LastSalary: number;
  RemarkDesc: string;
  Length: number;
  Weight: number;
  PhysicallyHandicappedDesc: string;
  HealthProblemDesc: string;
  GeneralDesc: string;
  PractisesDesc: string;
  IntegrationOid: string; // GUID
  ImageData: Blob; // Byte
  UpdateDate: Date;
  MaritalStatus: MaritalStatus;
  IdentificationDocumentType: IdentificationDocumentType | string;
  Gender: Gender;
  BloodType: BloodType;
  MilitaryServiceState: MilitaryServiceState;
  PersonnelRemark: PersonnelRemark;
  PersonnelJobCallStatus: PersonnelJobCallStatus;
  CountryDefinition: CountryDefinition;
  StateDefinition: StateDefinition;
  CityDefinition: CityDefinition;
  DistrictDefinition: DistrictDefinition;
  PersonnelNationality: PersonnelNationality;
  PersonnelJob: PersonnelJob;
  PersonnelJobBranch: PersonnelJobBranch;
  PersonnelEducation: PersonnelEducation;
  BirthCountryDefinition: CountryDefinition;
  BirthStateDefinition: StateDefinition;
  BirthCityDefinition: CityDefinition;
  BirthDistrictDefinition: DistrictDefinition;
  PersonnelDrivingLicence: PersonnelDrivingLicence;
  PersonnelDecision: PersonnelDecision;
  PersonnelCvEducations: Array<PersonnelCvEducation>;
  PersonnelCvLanguages: Array<PersonnelCvLanguage>;
  PersonnelCvLastJobs: Array<PersonnelCvLastJob>;
  PersonnelCvLastJobReferences: Array<PersonnelCvLastJobReference>;
  PersonnelCvJobQualitys: Array<PersonnelCvJobQuality>;
  PersonnelCvSendMails: Array<PersonnelCvSendMail>;
  PersonnelCVFiles: Array<PersonnelCVFile>;
  FileSystemStoreObjectBases: Array<FileSystemStoreObjectBase>;
  year: string;
  month: string;
  day: string;
}
